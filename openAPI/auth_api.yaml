openapi: 3.0.2
info:
  title: RoboCupMS - Auth API
  description: API slouži pro přihlášení, odhlášení a registraci uživatelů
  version: 1.0.0
  contact:
    email: m1_krcma@utb.cz
servers:
  - url: https://utb-robogames.com:8080/auth
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-TOKEN
paths:
  /login:
    get:
      summary: Přihlásí uživatele do systemu
      description:
        Uživatel, který se chce přihlásit do systemu odešle svůj email a heslo. Pokud jsou přihlašovací údaje platné pak vygeneruje přistupový token.
        Token je platný do doby dokud se uživatel znovů nepřihlási z jíneho zařízeni nebo se neodhlásí.
        Token se stavá automaticky neplatným po uplynutí definovaneho casu.
      parameters:
        - in: header
          name: USER-EMAIL
          description: Email uživatele
          required: true
          schema:
            type: string
            example: user123@email.com
        - in: header
          name: USER-PASSWORD
          description: Heslo uživatele
          required: true
          schema:
            type: string
            example: abcd1234
      responses:
        "200":
          description: Uživatel je přihlášen a získa přistupový token. V opačné připadě je typ odpovědi "ERROR"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "RESPONSE"
                  data:
                    type: string
                    format: uuid

  /oAuth2:
    get:
      summary: Vygeneruje odkaz pro autorizaci uživatele
      description:
        Vygeneruje odkaz pro autorizaci uživatele. Po uspěšné autorizaci je uživatel
        přesměrován na adresu specifikovanou serverem "com.robogames.RoboCupMS.Business.Security.OAuth2Service.REDIRECT_URI". Zde musí být
        odeslán POST request na endpoint serveru "/auth/oAuth2GenerateToken" s
        parametrem "code" jehož hodnutu získá z aktualní URL.
      parameters: []
      responses:
        "200":
          description: URL odkaz pro autorizaci uzivatele pomoci oAuth2
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "RESPONSE"
                  data:
                    type: string
                    format: url
                    example: https://accounts.google.com/o/oauth2/v2/auth?scope=https://www.googleapis.com/auth/userinfo.profile&access_type=offline&include_granted_scopes=true&response_type=code&state=state_parameter_passthrough_value&redirect_uri=https://localhost/auth/oauth2/code&client_id=XX

  /logout:
    get:
      summary: Odhlásí uživatele ze systemu
      description: Pro odhlášení využije přistupový token, podle kterého určí jakého uživatele ma odhlásit. Následně se přístupový token stáva neplatným.
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: Odpověd o stavu provedeného požadavku
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "RESPONSE"
                  data:
                    type: string
                    example: "success"

  /oAuth2GenerateToken:
    post:
      summary: Vygeneruje přístupový token pro uživatele s využitím oAuth2
      description: Pokud uživatel v systemu neexistuje, pak ho zaregistruje.
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
            example: abcd1234
      responses:
        "200":
          description: Přistupový token uživatele
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "RESPONSE"
                  data:
                    type: string
                    format: uuid

  /register:
    post:
      summary: Registruje nového uživatele
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                password:
                  type: string
                birthDate:
                  type: string
              required:
                - name
                - surname
                - email
                - password
                - birthDate
      responses:
        "200":
          description: Odpověd o stavu provedeného požadavku
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: "RESPONSE"
                  data:
                    type: string
                    example: "success"
